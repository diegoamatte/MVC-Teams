@model Teams.ViewModels.Team.CreateTeamViewModel

@{
    ViewData["Title"] = "Create";
}

<h2 class="display-4 text-center">Create Team</h2>

<hr />

<div class="card">
    <div class="card-body">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" aria-describedby="validationName" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="League" class="control-label"></label>
                        <input asp-for="League" class="form-control" />
                        <span asp-validation-for="League" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="TeamLogoUrl" class="control-label"></label>
                        <input asp-for="TeamLogoUrl" class="form-control" />
                        <span asp-validation-for="TeamLogoUrl" class="text-danger"></span>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        <a class="btn btn-default" asp-action="Index">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
